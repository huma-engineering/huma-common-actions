name: Prints the deployment result
description: Prints the deployment result including all the web/server/db urls
author: Mohammad Asghari mohammad.asghari@huma.com
branding:
  color: 'blue'
  icon: 'package'
inputs:
  update_chart: { required: true, description: 'Update chart flag' }
  server_name: { required: true, description: 'Name of the project, such as dctserver' }
  host_prefix: { required: true, description: 'The root domain name for the deployment' }
  grafana_host: { required: true, description: 'The url of grafana host' }
  atlas_project_url: { required: true, description: 'Atlas project url' }
  atlas_project: { required: true, description: 'The name of the project in atlas' }
  atlas_cluster: { required: true, description: 'The cluster name of atlas' }
  app_name: { required: true, description: 'The domain prefix of the deployed app' }
  host_postfix: { required: true, description: 'The host prefix for mongo' }
  db_user: { required: true, description: 'Database username' }
  db_provider: { required: true, description: 'DB provider, e.g: atlas or kubedb' }
  bucket_provider: { required: true, description: 'The bucket provider, e.g: gcs, aws' }
outputs:
  version:
    description: The version of created chart
    value: ${{ inputs.update_chart == true && steps.update.outputs.version || steps.skip.outputs.version }}
runs:
  using: composite
  steps:
    - name: Render pr-preview-comment template
      id: template
      uses: chuhlomin/render-template@v1.6
      with:
        template: ${{ github.action_path }}/pr-preview-comment.tpl
        vars: |-
          server_name: ${{ inputs.server_name}}
          url: "https://${{ env.app_name }}.${{ inputs.host_postfix }}"
          mongo_express_url: ${{ format('"https://{0}/mongo-express/db/{1}"',
            env.host_postfix, env.db_user) }}
          mongo_uri: ${{ env.db_provider == 'kubedb' &&
            format('"mongodb://{0}:{1}@{2}/{0}"',
            env.db_user, steps.db_secret.outputs.password, env.host_postfix) ||
            env.db_provider == 'atlas' && steps.db_secret.outputs.mongo_uri }}
          username: ${{ steps.db_secret.outputs.username }}
          password: ${{ steps.db_secret.outputs.password }}
          bucket_uri: ${{ format('"{0}://{1}"', env.bucket_provider == 'gcs' && 'gs' || 's3',
            steps.bucket_secret.outputs.bucket) }}
          console_url: ${{ env.bucket_provider == 'gcs' &&
            format('"[Google Cloud Console URL](https://console.cloud.google.com/storage/browser/{0})"',
            steps.bucket_secret.outputs.bucket) ||
            format('"[AWS Console URL](https://s3.console.aws.amazon.com/s3/buckets/{0}?region={1})"',
            steps.bucket_secret.outputs.bucket, steps.bucket_secret.outputs.region) }}
          dashboard_url: ${{ inputs.grafana_host }}${{ needs.deploy.outputs.dashboard_url }}
          atlas_warning: ${{ env.db_provider == 'atlas' &&
            format('"- {0} `{1}` project [IP Access List]({2}#security/network/accessList)."',
            '**Note:** for Atlas Mongo Shell your IP should be on the',
            inputs.atlas_project, inputs.atlas_project_url) || '' }}
          atlas_cp: ${{ env.db_provider == 'atlas' &&
            format('"<br/>[Atlas Cluster control panel]({0}#clusters/detail/{1})."',
            inputs.atlas_project_url, inputs.atlas_cluster) || '' }}
