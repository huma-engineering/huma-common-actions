name: Run migrations for a PR preview deployment
description: Run migrations for a PR preview deployment
inputs:
  server_name: { required: true, description: '' }
  app_namespace: { required: true, description: '' }
  cluster_name: { required: true, description: '' }
  cluster_location: { required: false, description: '' }
  migrate_py: { required: true, description: '' }
  migrate_config: { required: true, description: '' }
  has_deploy_tag: { required: true, description: '' }
  gke_sa_key: { required: true, description: '' }

runs:
  using: composite
  steps:
    - name: Put reaction on the command message
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ github.event.comment.id }}
        reactions: eyes

    - name: create a comment before exit
      if: ${{ !inputs.has_deploy_tag }}
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |-
          This PR don't have a preview deployment yet.‚ùå
          Please use a `/deploy` command first to create one.üí°

    - name: Authenticate to Google Cloud via a Service Account Key JSON
      if: ${{ inputs.has_deploy_tag }}
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.gke_sa_key }}

    - name: Get the GKE credentials so we can deploy to the cluster
      if: ${{ inputs.has_deploy_tag }}
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ inputs.cluster_name }}
        location: ${{ inputs.cluster_location }}

    - name: Run migrations for a PR preview deployment
      if: ${{ inputs.has_deploy_tag }}
      id: migrate
      run: |
        result=$(kubectl exec -n ${{ inputs.app_namespace }} deploy/${{ inputs.server_name }} \
          -- python ${{ inputs.migrate_py }} \
          --config ${{ inputs.migrate_config }} 2>&1) && error=0 || error=$?
        # remove special characters
        result="${result//'%'/'%25'}"
        result="${result//$'\n'/'%0A'}"
        result="${result//$'\r'/'%0D'}"
        echo "${result}"
        echo "::set-output name=result::$result"
        echo "::set-output name=error::$error"
      shell: bash

    - name: Send back the result
      if: steps.migrate.outputs.error == 0 && inputs.has_deploy_tag
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |-
          Running the migration command `python migrate.py --config config.yaml`
          returns the following output:
          ```sh
          ${{ steps.migrate.outputs.result }}
          ```
          [The corresponding Github CI workflow run](${{ format('{0}/{1}/actions/runs/{2}',
            github.server_url, github.repository, github.run_id) }})

    - name: Report on migrate failure
      if: steps.migrate.outputs.error != 0 && inputs.has_deploy_tag
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |-
          Failed to run migration.‚ùå
          Got the following output:
          ```sh
          ${{ steps.migrate.outputs.result }}
          ```
          [The corresponding Github CI workflow run](${{ format('{0}/{1}/actions/runs/{2}',
            github.server_url, github.repository, github.run_id) }})
